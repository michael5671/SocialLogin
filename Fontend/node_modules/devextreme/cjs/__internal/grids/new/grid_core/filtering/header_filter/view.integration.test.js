/**
 * DevExtreme (cjs/__internal/grids/new/grid_core/filtering/header_filter/view.integration.test.js)
 * Version: 25.1.3
 * Build date: Wed Jun 25 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
"use strict";
var _globals = require("@jest/globals");
var _widget = _interopRequireDefault(require("../../../../../grids/new/card_view/widget"));
var _inferno = require("inferno");
var _view_controller = require("./view_controller");

function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    }
}
const SELECTORS = {
    popupContent: ".dx-popup-wrapper.dx-header-filter-menu"
};
const rootQuerySelector = selector => document.body.querySelector(selector);
(0, _globals.describe)("HeaderFilter", (() => {
    (0, _globals.describe)("View integration", (() => {
        (0, _globals.it)("should render popup with list by default", (() => {
            const container = document.createElement("div");
            const popupContainer = document.createElement("div");
            const {
                body: body
            } = document;
            body.append(container);
            const cardView = new _widget.default(container, {
                dataSource: [{
                    A: "A_0"
                }, {
                    A: "A_1"
                }, {
                    A: "A_2"
                }, {
                    A: "A_3"
                }, {
                    A: "A_4"
                }],
                columns: ["A"],
                headerFilter: {
                    visible: true
                }
            });
            const viewController = cardView.diContext.get(_view_controller.HeaderFilterViewController);
            const column = cardView.getVisibleColumns()[0];
            viewController.openPopup(popupContainer, column);
            (0, _inferno.rerender)();
            (0, _globals.expect)(rootQuerySelector(SELECTORS.popupContent)).toMatchSnapshot()
        }));
        (0, _globals.it)("should render popup with tree list if dataType is date-like", (() => {
            const container = document.createElement("div");
            const popupContainer = document.createElement("div");
            const {
                body: body
            } = document;
            body.append(container);
            const cardView = new _widget.default(container, {
                dataSource: [{
                    A: "A_0"
                }, {
                    A: "A_1"
                }, {
                    A: "A_2"
                }, {
                    A: "A_3"
                }, {
                    A: "A_4"
                }],
                columns: [{
                    dataField: "A",
                    dataType: "date"
                }],
                headerFilter: {
                    visible: true
                }
            });
            const viewController = cardView.diContext.get(_view_controller.HeaderFilterViewController);
            const column = cardView.getVisibleColumns()[0];
            viewController.openPopup(popupContainer, column);
            (0, _inferno.rerender)();
            (0, _globals.expect)(rootQuerySelector(SELECTORS.popupContent)).toMatchSnapshot()
        }))
    }))
}));
