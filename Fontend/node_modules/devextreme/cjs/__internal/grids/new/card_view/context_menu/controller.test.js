/**
 * DevExtreme (cjs/__internal/grids/new/card_view/context_menu/controller.test.js)
 * Version: 25.1.3
 * Build date: Wed Jun 25 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
"use strict";
var _globals = require("@jest/globals");
var _context_menu = _interopRequireDefault(require("../../../../../ui/context_menu"));
var _di = require("../di.test_utils");
var _controller = require("./controller");

function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    }
}
const setup = options => {
    const context = (0, _di.getContext)(options);
    const controller = context.get(_controller.ContextMenuController);
    const container = document.createElement("div");
    const contextMenu = new _context_menu.default(container, {
        onPositioning: controller.onPositioning
    });
    controller.contextMenuRef = {
        current: contextMenu
    };
    return {
        controller: controller,
        contextMenu: contextMenu
    }
};
(0, _globals.describe)("ContextMenu", (() => {
    (0, _globals.describe)("Controller", (() => {
        (0, _globals.it)("onContextMenuPreparing is called on getItems()", (() => {
            const onContextMenuPreparing = _globals.jest.fn();
            const {
                controller: controller
            } = setup({
                onContextMenuPreparing: onContextMenuPreparing
            });
            controller.getItems("content", document.createElement("div"));
            (0, _globals.expect)(onContextMenuPreparing).toHaveBeenCalledTimes(1)
        }))
    }))
}));
