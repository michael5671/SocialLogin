/**
 * DevExtreme (cjs/__internal/core/r1/runtime/inferno/index.js)
 * Version: 25.1.3
 * Build date: Wed Jun 25 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _base_component = require("./base_component");
Object.keys(_base_component).forEach((function(key) {
    if ("default" === key || "__esModule" === key) {
        return
    }
    if (key in exports && exports[key] === _base_component[key]) {
        return
    }
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _base_component[key]
        }
    })
}));
var _create_context = require("./create_context");
Object.keys(_create_context).forEach((function(key) {
    if ("default" === key || "__esModule" === key) {
        return
    }
    if (key in exports && exports[key] === _create_context[key]) {
        return
    }
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _create_context[key]
        }
    })
}));
var _effect = require("./effect");
Object.keys(_effect).forEach((function(key) {
    if ("default" === key || "__esModule" === key) {
        return
    }
    if (key in exports && exports[key] === _effect[key]) {
        return
    }
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _effect[key]
        }
    })
}));
var _effect_host = require("./effect_host");
Object.keys(_effect_host).forEach((function(key) {
    if ("default" === key || "__esModule" === key) {
        return
    }
    if (key in exports && exports[key] === _effect_host[key]) {
        return
    }
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _effect_host[key]
        }
    })
}));
var _hydrate = require("./mocked/hydrate");
Object.keys(_hydrate).forEach((function(key) {
    if ("default" === key || "__esModule" === key) {
        return
    }
    if (key in exports && exports[key] === _hydrate[key]) {
        return
    }
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _hydrate[key]
        }
    })
}));
var _normalize_styles = require("./normalize_styles");
Object.keys(_normalize_styles).forEach((function(key) {
    if ("default" === key || "__esModule" === key) {
        return
    }
    if (key in exports && exports[key] === _normalize_styles[key]) {
        return
    }
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _normalize_styles[key]
        }
    })
}));
var _portal = require("./portal");
Object.keys(_portal).forEach((function(key) {
    if ("default" === key || "__esModule" === key) {
        return
    }
    if (key in exports && exports[key] === _portal[key]) {
        return
    }
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _portal[key]
        }
    })
}));
var _re_render_effect = require("./re_render_effect");
Object.keys(_re_render_effect).forEach((function(key) {
    if ("default" === key || "__esModule" === key) {
        return
    }
    if (key in exports && exports[key] === _re_render_effect[key]) {
        return
    }
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _re_render_effect[key]
        }
    })
}));
var _render_template = require("./render_template");
Object.keys(_render_template).forEach((function(key) {
    if ("default" === key || "__esModule" === key) {
        return
    }
    if (key in exports && exports[key] === _render_template[key]) {
        return
    }
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _render_template[key]
        }
    })
}));
