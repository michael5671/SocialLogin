/**
 * DevExtreme (cjs/__internal/events/m_visibility_change.js)
 * Version: 25.1.3
 * Build date: Wed Jun 25 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.triggerShownEvent = exports.triggerResizeEvent = exports.triggerHidingEvent = exports.default = void 0;
var _events_engine = _interopRequireDefault(require("../../common/core/events/core/events_engine"));
var _renderer = _interopRequireDefault(require("../../core/renderer"));

function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    }
}
const triggerVisibilityChangeEvent = function(eventName) {
    return function(element) {
        const $element = (0, _renderer.default)(element || "body");
        const changeHandlers = $element.filter(".dx-visibility-change-handler").add($element.find(".dx-visibility-change-handler"));
        for (let i = 0; i < changeHandlers.length; i++) {
            _events_engine.default.triggerHandler(changeHandlers[i], eventName)
        }
    }
};
const triggerShownEvent = exports.triggerShownEvent = triggerVisibilityChangeEvent("dxshown");
const triggerHidingEvent = exports.triggerHidingEvent = triggerVisibilityChangeEvent("dxhiding");
const triggerResizeEvent = exports.triggerResizeEvent = triggerVisibilityChangeEvent("dxresize");
var _default = exports.default = {
    triggerHidingEvent: triggerHidingEvent,
    triggerResizeEvent: triggerResizeEvent,
    triggerShownEvent: triggerShownEvent
};
