/**
 * DevExtreme (esm/__internal/core/ai_integration/core/prompt_manager.js)
 * Version: 25.1.3
 * Build date: Wed Jun 25 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
import {
    templates
} from "../../../core/ai_integration/templates/index";
export const ERROR_MESSAGES = {
    TEMPLATE_NOT_FOUND: "Template not found"
};
export class PromptManager {
    constructor() {
        this.templates = new Map(Object.entries(templates))
    }
    buildPrompt(templateName, data) {
        const template = this.templates.get(templateName);
        if (!template) {
            throw new Error(ERROR_MESSAGES.TEMPLATE_NOT_FOUND)
        }
        const system = this.generateMessage(template.system, data.system);
        const user = this.generateMessage(template.user, data.user);
        const prompt = {
            system: system,
            user: user
        };
        return prompt
    }
    generateMessage(promptTemplate, placeholders) {
        if (!placeholders && !promptTemplate) {
            return
        }
        if (!promptTemplate && placeholders) {
            return Object.keys(placeholders).reduce(((acc, key) => `${acc} ${placeholders[key]}`), "").trim()
        }
        if (!placeholders && promptTemplate) {
            return promptTemplate
        }
        const result = this.replacePlaceholders(promptTemplate, placeholders);
        return result
    }
    replacePlaceholders(promptTemplate, placeholders) {
        const result = Object.entries(placeholders).reduce(((acc, _ref) => {
            let [key, value] = _ref;
            return acc.replaceAll(`{{${key}}}`, value)
        }), promptTemplate);
        return result
    }
}
