/**
 * DevExtreme (esm/__internal/grids/new/grid_core/utils/parse_value/parse_value.js)
 * Version: 25.1.3
 * Build date: Wed Jun 25 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
import dateLocalization from "../../../../../../common/core/localization/date";
import {
    isDefined,
    isNumeric,
    isString
} from "../../../../../../core/utils/type";
import {
    strictParseNumber
} from "../../../../../grids/grid_core/columns_controller/m_columns_controller_utils";
import gridCoreUtils from "../../../../../grids/grid_core/m_utils";
export const parseNumberValue = (text, format) => {
    switch (true) {
        case isString(text) && !!format:
            return strictParseNumber(text.trim(), format);
        case isDefined(text) && isNumeric(text):
            return Number(text);
        default:
            return
    }
};
export const parseBooleanValue = (text, trueText, falseText) => {
    switch (true) {
        case text === trueText:
            return true;
        case text === falseText:
            return false;
        default:
            return
    }
};
export const parseDateValue = (text, format) => {
    let parsedValue = null;
    if (format) {
        try {
            parsedValue = dateLocalization.parse(text, format)
        } catch {
            parsedValue = null
        }
    }
    if (!parsedValue) {
        parsedValue = new Date(text)
    }
    return isNaN(parsedValue.getTime()) ? text : parsedValue
};
export const parseValue = (column, text) => {
    switch (true) {
        case "number" === column.dataType:
            return parseNumberValue(text, column.format);
        case "boolean" === column.dataType:
            return parseBooleanValue(text, column.trueText, column.falseText);
        case gridCoreUtils.isDateType(column.dataType):
            return parseDateValue(text, column.format);
        default:
            return text
    }
};
