/**
 * DevExtreme (esm/__internal/grids/new/grid_core/inferno_wrappers/popup.js)
 * Version: 25.1.3
 * Build date: Wed Jun 25 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
import _extends from "@babel/runtime/helpers/esm/extends";
import {
    createFragment
} from "inferno";
import dxPopup from "../../../../../ui/popup";
import {
    createPortal
} from "inferno";
import {
    wrapRef
} from "./utils";
import {
    InfernoWrapper
} from "./widget_wrapper";
export class Popup extends InfernoWrapper {
    constructor() {
        super(...arguments);
        this.contentRef = {}
    }
    render() {
        return createFragment([super.render(), this.contentRef.current && createPortal(this.props.children, this.contentRef.current)], 0)
    }
    transformRef(props) {
        var _props;
        if (null !== (_props = props) && void 0 !== _props && null !== (_props = _props.position) && void 0 !== _props && null !== (_props = _props.of) && void 0 !== _props && _props.current) {
            props = _extends({}, props, {
                position: _extends({}, props.position, {
                    of: wrapRef(props.position.of)
                })
            })
        }
        return props
    }
    createComponent(ref, props) {
        return super.createComponent(ref, this.transformRef(props))
    }
    updateComponentOptions(prevProps, props) {
        super.updateComponentOptions(prevProps, this.transformRef(props))
    }
    getComponentFabric() {
        return dxPopup
    }
    componentDidMount() {
        super.componentDidMount();
        this.contentRef.current = this.component.$content().get(0);
        this.setState({})
    }
}
