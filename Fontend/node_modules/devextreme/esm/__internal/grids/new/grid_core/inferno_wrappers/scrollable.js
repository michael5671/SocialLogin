/**
 * DevExtreme (esm/__internal/grids/new/grid_core/inferno_wrappers/scrollable.js)
 * Version: 25.1.3
 * Build date: Wed Jun 25 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
import {
    createFragment
} from "inferno";
import dxScrollable from "../../../../../ui/scroll_view/ui.scrollable";
import {
    createPortal
} from "inferno";
import {
    InfernoWrapper
} from "./widget_wrapper";
export class Scrollable extends InfernoWrapper {
    constructor() {
        super(...arguments);
        this.contentRef = {}
    }
    render() {
        return createFragment([super.render(), this.contentRef.current && createPortal(this.props.children, this.contentRef.current)], 0)
    }
    getComponentFabric() {
        return dxScrollable
    }
    updateScrollTop() {
        var _this$component;
        null === (_this$component = this.component) || void 0 === _this$component || _this$component.scrollTo(this.props.scrollTop)
    }
    componentDidMount() {
        if (void 0 === this.props.useNative) {
            delete this.props.useNative
        }
        super.componentDidMount();
        this.contentRef.current = this.component.$content().get(0);
        this.setState({});
        this.updateScrollTop()
    }
    componentDidUpdate(prevProps) {
        super.componentDidUpdate(prevProps);
        this.updateScrollTop()
    }
    clientHeight() {
        return this.component.clientHeight()
    }
}
