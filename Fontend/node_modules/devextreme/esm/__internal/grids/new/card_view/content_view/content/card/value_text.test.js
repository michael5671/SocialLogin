/**
 * DevExtreme (esm/__internal/grids/new/card_view/content_view/content/card/value_text.test.js)
 * Version: 25.1.3
 * Build date: Wed Jun 25 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
import {
    createComponentVNode
} from "inferno";
import {
    describe,
    expect,
    it
} from "@jest/globals";
import {
    render
} from "inferno";
import {
    ValueText
} from "./value_text";
describe("Content View", (() => {
    describe("ValueText", (() => {
        it("should set root classes", (() => {
            const container = document.createElement("div");
            render(createComponentVNode(2, ValueText, {
                field: {
                    column: {
                        alignment: "center"
                    },
                    text: "TEST",
                    highlightedText: null
                }
            }), container);
            expect(container).toMatchSnapshot()
        }));
        it("should add title attribute", (() => {
            const container = document.createElement("div");
            render(createComponentVNode(2, ValueText, {
                field: {
                    column: {
                        alignment: "center"
                    },
                    text: "TEST",
                    highlightedText: null
                },
                fieldHintEnabled: true
            }), container);
            expect(container).toMatchSnapshot()
        }));
        it("should render plain text if highlighted text is null", (() => {
            const container = document.createElement("div");
            render(createComponentVNode(2, ValueText, {
                field: {
                    column: {
                        alignment: "center"
                    },
                    text: "TEST_TEXT",
                    highlightedText: null
                }
            }), container);
            expect(container).toMatchSnapshot()
        }));
        it("should render highlighted text if passed", (() => {
            const container = document.createElement("div");
            render(createComponentVNode(2, ValueText, {
                field: {
                    column: {
                        alignment: "center"
                    },
                    text: "TEST_TEXT",
                    highlightedText: [{
                        type: "usual",
                        text: "USUAL_PART "
                    }, {
                        type: "highlighted",
                        text: "MATCH_PART"
                    }, {
                        type: "usual",
                        text: " USUAL_PART"
                    }]
                }
            }), container);
            expect(container).toMatchSnapshot()
        }))
    }))
}));
